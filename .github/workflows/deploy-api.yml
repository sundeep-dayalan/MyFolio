name: Deploy FastAPI to Google Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
  pull_request:
    branches:
      - main
    paths:
      - 'api/**'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: myfolio-api

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: ./api

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
                     -t gcr.io/$PROJECT_ID/$SERVICE_NAME:latest .

    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8000 \
          --memory 1Gi \
          --cpu 1 \
          --timeout 300s \
          --max-instances 10 \
          --min-instances 0 \
          --service-account myfolio-api-service@fit-guide-465001-p3.iam.gserviceaccount.com \
          --set-env-vars ENVIRONMENT=production,DEBUG=false,LOG_LEVEL=INFO \
          --set-secrets SECRET_KEY=SECRET_KEY:latest,GOOGLE_CLIENT_ID=GOOGLE_CLIENT_ID:latest,GOOGLE_CLIENT_SECRET=GOOGLE_CLIENT_SECRET:latest,FIREBASE_PROJECT_ID=FIREBASE_PROJECT_ID:latest,FIREBASE_CREDENTIALS=FIREBASE_CREDENTIALS:latest,GOOGLE_REDIRECT_URI=GOOGLE_REDIRECT_URI:latest

    - name: Get service URL
      id: url
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
        echo "ðŸš€ Deployed to: $SERVICE_URL"

    - name: Test deployment
      run: |
        sleep 30  # Wait for deployment to be ready
        curl -f ${{ steps.url.outputs.SERVICE_URL }}/health || exit 1
        echo "âœ… Health check passed"
