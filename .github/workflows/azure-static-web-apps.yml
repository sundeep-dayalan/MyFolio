name: Deploy Azure Static Web Apps Frontend

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  APP_LOCATION: './frontend'
  OUTPUT_LOCATION: 'dist'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.APP_LOCATION }}/package-lock.json'

      - name: Install dependencies
        run: |
          cd ${{ env.APP_LOCATION }}
          npm install
          rm -rf node_modules package-lock.json
          npm install

      - name: Build frontend
        run: |
          cd ${{ env.APP_LOCATION }}
          echo "Building React app..."
          npm run build

          # Check if build was successful
          if [ ! -d "dist" ]; then
            echo "Build failed - dist directory not found"
            exit 1
          fi

          # More thorough cleanup
          cd dist
          find . -name "*.map" -delete
          find . -name "*.LICENSE.txt" -delete
          find . -name "*.test.js" -delete
          find . -name "*.spec.js" -delete
          find . -name "__tests__" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name "node_modules" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name "*.development.*" -delete

          # Show final build size and file count
          echo "Build size after cleanup:"
          du -sh .
          echo "File count:"
          find . -type f | wc -l

          # List largest files
          echo "Largest files:"
          find . -type f -exec ls -lh {} + | sort -k5 -hr | head -10
        env:
          VITE_API_BASE_URL: https://sage-24293-api.azurewebsites.net/api
          VITE_APP_ENV: production
          NODE_ENV: production

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: true
