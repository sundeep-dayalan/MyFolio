# =======================================================
# MyFolio - Personal Wealth Management Application
# Environment Configuration Template
# =======================================================
# 
# Instructions:
# 1. Copy this file to `.env` in the same directory
# 2. Replace all placeholder values with your actual credentials
# 3. Never commit the `.env` file to version control
#

# Application Settings
DEBUG=true
ENVIRONMENT=development

# Security Configuration
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
SECRET_KEY=your-super-secret-jwt-key-here-generate-a-random-string

# Firebase Configuration
# Get these from your Firebase Console > Project Settings > Service Accounts
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_CREDENTIALS_PATH=service-account.json

# Google OAuth Configuration
# Create these at: https://console.developers.google.com/
# 1. Create a new project or select existing one
# 2. Enable Google+ API
# 3. Create OAuth 2.0 credentials
# 4. Add authorized redirect URIs
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:8000/api/v1/auth/oauth/google/callback

# Database Configuration (if using a database)
# DATABASE_URL=postgresql://username:password@localhost:5432/myfolio
# DATABASE_URL=sqlite:///./myfolio.db

# CORS Settings
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000

# Logging
LOG_LEVEL=INFO


PLAID_CLIENT_ID=your_client_id
PLAID_SECRET=your_secret
PLAID_ENV=sandbox

# =======================================================
# Setup Instructions:
# =======================================================
#
# 1. Google OAuth Setup:
#    - Go to https://console.developers.google.com/
#    - Create a new project or select existing
#    - Enable Google+ API or Google Sign-In API
#    - **IMPORTANT**: Also enable Google Calendar API (needed for test user enforcement)
#    - Go to Credentials > Create Credentials > OAuth 2.0 Client ID
#    - Choose "Web application"
#    - Add authorized redirect URIs:
#      * http://localhost:8000/api/v1/auth/oauth/google/callback
#      * http://localhost:5173/auth/callback (for frontend)
#    - Copy Client ID and Client Secret to above variables
#    - In OAuth consent screen, ensure app is in "Testing" mode with your email in test users
#
# 2. Firebase Setup (Optional - for Firestore):
#    - Go to https://console.firebase.google.com/
#    - Create a new project or select existing
#    - Go to Project Settings > Service Accounts
#    - Click "Generate new private key"
#    - Save the JSON file as "service-account.json" in the api directory
#    - Update FIREBASE_PROJECT_ID with your project ID
#
# 3. Security:
#    - Generate a strong SECRET_KEY for JWT tokens
#    - You can use: openssl rand -hex 32
#
# Note: Calendar API scope is included to force Google to respect test users restriction.
# This is a known Google OAuth behavior - basic scopes ignore test user limits.
#
# =======================================================
