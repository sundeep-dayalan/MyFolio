{
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:plaid.com)",
      "WebFetch(domain:docs.plaid.com)",
      "WebFetch(domain:cloud.google.com)",
      "WebFetch(domain:firebase.google.com)",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:fastapi.tiangolo.com)",
      "WebFetch(domain:docs.python.org)",
      "WebFetch(domain:git-scm.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:npmjs.com)",

      "mcp__serena__get_symbols_overview",
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__write_memory",
      "mcp__serena__find_symbol",
      "mcp__serena__get_file_content",
      "mcp__serena__get_project_structure",

      "Read(path:api/**/*.py)",
      "Read(path:react-app/**/*.ts)",
      "Read(path:react-app/**/*.tsx)",
      "Read(path:react-app/**/*.js)",
      "Read(path:react-app/**/*.jsx)",
      "Read(path:react-app/**/*.json)",
      "Read(path:react-app/**/*.css)",
      "Read(path:react-app/**/*.scss)",
      "Read(path:react-app/**/*.md)",
      "Read(path:api/**/*.md)",
      "Read(path:docs/**/*)",
      "Read(path:*.md)",
      "Read(path:*.json)",
      "Read(path:*.yml)",
      "Read(path:*.yaml)",
      "Read(path:.env.example)",
      "Read(path:.gitignore)",
      "Read(path:requirements*.txt)",
      "Read(path:package*.json)",
      "Read(path:tsconfig.json)",
      "Read(path:vite.config.ts)",
      "Read(path:tailwind.config.js)",

      "Edit(path:api/**/*.py)",
      "Edit(path:react-app/src/**/*.ts)",
      "Edit(path:react-app/src/**/*.tsx)",
      "Edit(path:react-app/src/**/*.js)",
      "Edit(path:react-app/src/**/*.jsx)",
      "Edit(path:react-app/src/**/*.css)",
      "Edit(path:react-app/src/**/*.scss)",
      "Edit(path:api/**/*.md)",
      "Edit(path:react-app/**/*.md)",
      "Edit(path:docs/**/*.md)",
      "Edit(path:README.md)",
      "Edit(path:CHANGELOG.md)",
      "Edit(path:COMPREHENSIVE_PROJECT_DOCUMENTATION.md)",

      "Write(path:api/tests/**/*.py)",
      "Write(path:react-app/src/**/*.test.ts)",
      "Write(path:react-app/src/**/*.test.tsx)",
      "Write(path:react-app/src/**/*.spec.ts)",
      "Write(path:api/**/*.py)",
      "Write(path:react-app/src/**/*.ts)",
      "Write(path:react-app/src/**/*.tsx)",
      "Write(path:docs/**/*.md)",
      "Write(path:.claude/commands/**/*.md)",

      "Terminal(command:cd api && python3 -m pytest)",
      "Terminal(command:cd api && python3 -m pytest tests/)",
      "Terminal(command:cd api && black .)",
      "Terminal(command:cd api && flake8)",
      "Terminal(command:cd api && mypy .)",
      "Terminal(command:cd react-app && npm test)",
      "Terminal(command:cd react-app && npm run lint)",
      "Terminal(command:cd react-app && npm run build)",
      "Terminal(command:cd react-app && npm run dev)",
      "Terminal(command:cd api && python3 run.py)",
      "Terminal(command:cd api && uvicorn app.main:app --reload)",
      "Terminal(command:git status)",
      "Terminal(command:git log)",
      "Terminal(command:git diff)",
      "Terminal(command:git branch)",
      "Terminal(command:lsof -ti:8000)",
      "Terminal(command:lsof -ti:5173)",
      "Terminal(command:ps aux | grep python)",
      "Terminal(command:ps aux | grep node)"
    ],

    "ask": [
      "Terminal(command:git add)",
      "Terminal(command:git commit)",
      "Terminal(command:git push)",
      "Terminal(command:git pull)",
      "Terminal(command:git merge)",
      "Terminal(command:git checkout)",
      "Terminal(command:git reset)",
      "Terminal(command:git revert)",
      "Terminal(command:git stash)",

      "Terminal(command:npm install)",
      "Terminal(command:npm update)",
      "Terminal(command:npm uninstall)",
      "Terminal(command:pip install)",
      "Terminal(command:pip uninstall)",
      "Terminal(command:pip freeze)",

      "Terminal(command:gcloud *)",
      "Terminal(command:firebase *)",
      "Terminal(command:docker *)",

      "Terminal(command:kill *)",
      "Terminal(command:killall *)",
      "Terminal(command:pkill *)",

      "Edit(path:requirements.txt)",
      "Edit(path:requirements-dev.txt)",
      "Edit(path:package.json)",
      "Edit(path:package-lock.json)",
      "Edit(path:.env)",
      "Edit(path:.env.local)",
      "Edit(path:.env.production)",
      "Edit(path:tsconfig.json)",
      "Edit(path:vite.config.ts)",
      "Edit(path:tailwind.config.js)",
      "Edit(path:.gitignore)",
      "Edit(path:Dockerfile)",
      "Edit(path:docker-compose.yml)",
      "Edit(path:.github/**/*)",

      "Write(path:*.env*)",
      "Write(path:requirements*.txt)",
      "Write(path:package*.json)",
      "Write(path:Dockerfile*)",
      "Write(path:docker-compose*)",
      "Write(path:.github/**/*)",
      "Write(path:.gcloudignore)",
      "Write(path:app.yaml)",
      "Write(path:cloudbuild.yaml)",

      "Delete(path:api/**/*.pyc)",
      "Delete(path:api/**/__pycache__/*)",
      "Delete(path:react-app/node_modules/*)",
      "Delete(path:react-app/dist/*)",
      "Delete(path:react-app/build/*)",
      "Delete(path:.pytest_cache/*)",
      "Delete(path:*.log)",
      "Delete(path:*.tmp)",

      "mcp__serena__execute_command",
      "mcp__serena__create_file",
      "mcp__serena__delete_file"
    ],

    "deny": [
      "Delete(path:/)",
      "Delete(path:~)",
      "Delete(path:../*)",
      "Delete(path:../../*)",
      "Delete(path:../../../*)",
      "Delete(path:/home/*)",
      "Delete(path:/Users/*)",
      "Delete(path:/System/*)",
      "Delete(path:/usr/*)",
      "Delete(path:/opt/*)",
      "Delete(path:/etc/*)",
      "Delete(path:/var/*)",
      "Delete(path:/tmp/*)",
      "Delete(path:C:\\*)",
      "Delete(path:D:\\*)",

      "Delete(path:api)",
      "Delete(path:react-app)",
      "Delete(path:docs)",
      "Delete(path:.git)",
      "Delete(path:.claude)",
      "Delete(path:node_modules)",
      "Delete(path:venv)",
      "Delete(path:.venv)",

      "Delete(path:*.py)",
      "Delete(path:*.ts)",
      "Delete(path:*.tsx)",
      "Delete(path:*.js)",
      "Delete(path:*.jsx)",
      "Delete(path:*.json)",
      "Delete(path:*.md)",
      "Delete(path:*.yml)",
      "Delete(path:*.yaml)",

      "Terminal(command:rm -rf *)",
      "Terminal(command:rm -r *)",
      "Terminal(command:rmdir *)",
      "Terminal(command:mv ../*)",
      "Terminal(command:mv ../../*)",
      "Terminal(command:cp ../* *)",
      "Terminal(command:rsync *)",

      "Terminal(command:sudo *)",
      "Terminal(command:su *)",
      "Terminal(command:chmod 777 *)",
      "Terminal(command:chown *)",
      "Terminal(command:chgrp *)",

      "Terminal(command:format *)",
      "Terminal(command:fdisk *)",
      "Terminal(command:mkfs *)",
      "Terminal(command:dd *)",

      "Terminal(command:curl * | bash)",
      "Terminal(command:wget * | bash)",
      "Terminal(command:curl * | sh)",
      "Terminal(command:wget * | sh)",

      "Terminal(command:python -c *exec*)",
      "Terminal(command:python -c *eval*)",
      "Terminal(command:python -c *import os*)",
      "Terminal(command:node -e *)",

      "Terminal(command:gcloud auth *)",
      "Terminal(command:gcloud config set *)",
      "Terminal(command:firebase login)",
      "Terminal(command:firebase logout)",

      "Terminal(command:npm publish)",
      "Terminal(command:pip publish)",
      "Terminal(command:twine upload)",

      "Write(path:../../../*)",
      "Write(path:../../*)",
      "Write(path:../*)",
      "Write(path:/home/*)",
      "Write(path:/Users/*)",
      "Write(path:/System/*)",
      "Write(path:/usr/*)",
      "Write(path:/opt/*)",
      "Write(path:/etc/*)",
      "Write(path:/var/*)",
      "Write(path:C:\\*)",
      "Write(path:D:\\*)",

      "Edit(path:../../../*)",
      "Edit(path:../../*)",
      "Edit(path:../*)",
      "Edit(path:/home/*)",
      "Edit(path:/Users/*)",
      "Edit(path:/System/*)",
      "Edit(path:/usr/*)",
      "Edit(path:/opt/*)",
      "Edit(path:/etc/*)",
      "Edit(path:/var/*)",
      "Edit(path:C:\\*)",
      "Edit(path:D:\\*)",

      "mcp__serena__system_command",
      "mcp__serena__file_operations_outside_project"
    ]
  }
}
